import { useState, useEffect } from "react";

// eslint-disable-next-line react/prop-types
export const VARIANT_Q = ({ onChange }) => {
  const [options, setOptions] = useState([
    { id: 1, text: "", isCorrect: false },
    { id: 2, text: "", isCorrect: false },
    { id: 3, text: "", isCorrect: false },
    { id: 4, text: "", isCorrect: false },
  ]);

  // –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–≤–µ—Ä—Ö –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
  useEffect(() => {
    onChange({
      answer: {
        variants: options.map((option) => option.text), // –í—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        correct: options.map((option) => option.isCorrect ? 1 : 0), // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã (1 –∏–ª–∏ 0)
      },
    });
  }, [options]);

  const addOption = () => {
    setOptions([...options, { id: options.length + 1, text: "", isCorrect: false }]);
  };

  const removeOption = (id) => {
    const updatedOptions = options
      .filter((option) => option.id !== id)
      .map((option, index) => ({
        ...option,
        id: index + 1, // –û–±–Ω–æ–≤–ª—è–µ–º id
      }));
    setOptions(updatedOptions);
  };

  const updateOptionText = (id, newText) => {
    setOptions(
      options.map((option) =>
        option.id === id ? { ...option, text: newText } : option
      )
    );
  };

  const toggleCorrect = (id) => {
    setOptions(
      options.map((option) =>
        option.id === id ? { ...option, isCorrect: !option.isCorrect } : option
      )
    );
  };

  return (
    <div className="form-container-vairants">
      <label>
        –î–æ–¥–∞–π—Ç–µ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:<span className="red">*</span>
      </label>
      <div className="answer-options">
        {options.map((option) => (
          <label key={option.id} className="answer-option">
            <input
              type="checkbox"
              className="answer-checkbox"
              checked={option.isCorrect}
              onChange={() => toggleCorrect(option.id)} // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            />
            <input
              type="text"
              className="answer-input"
              placeholder={`–í–∞—Ä—ñ–∞–Ω—Ç ${option.id}`}
              value={option.text}
              onChange={(e) => updateOptionText(option.id, e.target.value)}
            />
            <button
              type="button"
              className="answer-delete-btn"
              onClick={() => removeOption(option.id)}
            >
              üóëÔ∏è
            </button>
          </label>
        ))}
        <button type="button" className="add-answer-btn" onClick={addOption}>
          –î–æ–¥–∞—Ç–∏ –≤–∞—Ä—ñ–∞–Ω—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
        </button>
      </div>
    </div>
  );
};
